{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/currency-converter/currency-converter.component.ts","./src/app/currency-converter/currency-converter.component.html","./src/app/currency.service.ts","./src/app/ex-rates-tab/ex-rates-tab.component.ts","./src/app/ex-rates-tab/ex-rates-tab.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'currency-converter';\n}\n","\n<div>\n  <app-header></app-header>\n  <app-currency-converter></app-currency-converter>\n  <app-ex-rates-tab></app-ex-rates-tab>\n</div>\n\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { CurrencyConverterComponent } from './currency-converter/currency-converter.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ExRatesTabComponent } from './ex-rates-tab/ex-rates-tab.component';\n\n@NgModule({\n  declarations: [AppComponent, HeaderComponent, CurrencyConverterComponent, ExRatesTabComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { CurrencyService } from '../currency.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-currency-converter',\n  templateUrl: './currency-converter.component.html',\n  styleUrls: ['./currency-converter.component.css'],\n})\nexport class CurrencyConverterComponent implements OnInit {\n  amount1: number = 0;\n  amount2: number = 0;\n  selectedCurrency1: string = '';\n  selectedCurrency2: string = '';\n  currencies: any[] = []; // Массив для хранения списка валют\n\n  exchangeRates: any = {}; // Объект для хранения курсов обмена валют\n\n  updatedField: string = ''; // Переменная для хранения информации о последнем обновленном поле\n\n  constructor(private currencyService: CurrencyService) {}\n\n  ngOnInit(): void {\n    this.currencyService.getExchangeRates().subscribe((data) => {\n      this.currencies = data;\n      this.selectedCurrency1 = 'USD';\n      this.selectedCurrency2 = 'EUR';\n      this.updateExchangeRates();\n    });\n  }\n\n  updateExchangeRates(): void {\n    this.exchangeRates = {};\n\n    for (const currency1 of this.currencies) {\n      this.exchangeRates[currency1.cc] = {};\n\n      for (const currency2 of this.currencies) {\n        if (currency1.cc !== currency2.cc) {\n          this.exchangeRates[currency1.cc][currency2.cc] =\n            currency2.rate / currency1.rate;\n        }\n      }\n    }\n\n    this.convertCurrency();\n  }\n\n  convertCurrency(): void {\n    const rate1 =\n      this.exchangeRates[this.selectedCurrency1][this.selectedCurrency2];\n    const rate2 =\n      this.exchangeRates[this.selectedCurrency2][this.selectedCurrency1];\n\n    if (this.updatedField === 'amount1') {\n      if (this.amount1 && !isNaN(this.amount1)) {\n        this.amount2 = this.amount1 * rate1;\n        this.amount2 = Number(this.amount2.toFixed(2));\n      } else {\n        this.amount2 = 0;\n      }\n    } else if (this.updatedField === 'amount2') {\n      if (this.amount2 && !isNaN(this.amount2)) {\n        this.amount1 = this.amount2 * rate2;\n        this.amount1 = Number(this.amount1.toFixed(2));\n      } else {\n        this.amount1 = 0;\n      }\n    }\n  }\n\n  onAmount1Input(): void {\n    this.updatedField = 'amount1';\n    this.convertCurrency();\n  }\n\n  onAmount2Input(): void {\n    this.updatedField = 'amount2';\n    this.convertCurrency();\n  }\n}\n","<div class=\"converter\">\n  <div class=\"converterBlock\">\n    <label>I have</label>\n    <input type=\"number\" [(ngModel)]=\"amount1\" (input)=\"onAmount1Input()\" />\n    <select [(ngModel)]=\"selectedCurrency1\" (change)=\"updateExchangeRates()\">\n      <option *ngFor=\"let currency of currencies\" [value]=\"currency.cc\">\n        {{ currency.cc }}\n      </option>\n    </select>\n  </div>\n\n  <div class=\"converterBlock\">\n    <label>I will get</label>\n    <input type=\"number\" [(ngModel)]=\"amount2\" (input)=\"onAmount2Input()\" />\n    <select [(ngModel)]=\"selectedCurrency2\" (change)=\"updateExchangeRates()\">\n      <option *ngFor=\"let currency of currencies\" [value]=\"currency.cc\">\n        {{ currency.cc }}\n      </option>\n    </select>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrencyService {\n  private apiUrl =\n    'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json';\n\n  constructor(private http: HttpClient) {}\n\n  getExchangeRates(): Observable<any> {\n    return this.http.get<any>(this.apiUrl).pipe(tap(data=>console.log(data)));\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { CurrencyService } from '../currency.service';\n\n@Component({\n  selector: 'app-ex-rates-tab',\n  templateUrl: './ex-rates-tab.component.html',\n  styleUrls: ['./ex-rates-tab.component.css'],\n})\nexport class ExRatesTabComponent implements OnInit {\n  exchangeRates: any[] = [];\n\n  constructor(private currencyService: CurrencyService) {}\n\n  ngOnInit(): void {\n    this.currencyService.getExchangeRates().subscribe((data) => {\n      this.exchangeRates = data;\n    });\n  }\n}\n","<table class=\"currency-table\">\n  <thead>\n    <tr>\n      <th class=\"name-header\">Name</th>\n      <th class=\"currency-header\">Currency</th>\n      <th class=\"rate-header\">Rate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let rate of exchangeRates\">\n      <td>{{ rate.txt }}</td>\n      <td>{{ rate.cc }} / UAH</td>\n      <td>{{ rate.rate | number : \"1.2-2\"}}</td>\n    </tr>\n  </tbody>\n</table>\n","import { Component } from '@angular/core';\nimport { CurrencyService } from '../currency.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent {\n  currentDate: string = '';\n  currentTime: string = '';\n  filteredCurrencies$!: Observable<any[]>;\n\n  constructor(private currencyService: CurrencyService) {}\n\n  ngOnInit() {\n    this.filteredCurrencies$ = this.currencyService.getExchangeRates().pipe(\n      map((currencies) => {\n        const filteredCurrencies = currencies.filter(\n          (currency: any) => currency.cc === 'USD' || currency.cc === 'EUR'\n        );\n        return filteredCurrencies;\n      })\n    );\n    this.updateDateTime();\n    setInterval(() => {\n      this.updateDateTime();\n    }, 1000);\n  }\n  updateDateTime() {\n    const now = new Date();\n    this.currentDate = now.toLocaleDateString();\n    this.currentTime = now.toLocaleTimeString();\n  }\n}\n","<div class=\"header\">\n  <div class=\"datetime\">{{ currentDate }} {{ currentTime }}</div>\n  <div class=\"currencyBlock\">\n    <div *ngFor=\"let currency of filteredCurrencies$ | async\" class=\"currency\">\n      {{ currency.cc }}/UAH - {{ currency.rate | number : \"1.2-2\" }}\n    </div>\n  </div>\n</div>\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","routes","AppRoutingModule","forRoot","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","BrowserModule","HttpClientModule","HeaderComponent","CurrencyConverterComponent","FormsModule","ReactiveFormsModule","ExRatesTabComponent","AppModule","bootstrap","declarations","ɵɵtext","ɵɵproperty","currency_r2","cc","ɵɵadvance","ɵɵtextInterpolate1","currency_r3","currencyService","amount1","amount2","selectedCurrency1","selectedCurrency2","currencies","exchangeRates","updatedField","ngOnInit","getExchangeRates","subscribe","data","updateExchangeRates","currency1","currency2","rate","convertCurrency","rate1","rate2","isNaN","Number","toFixed","onAmount1Input","onAmount2Input","ɵɵdirectiveInject","CurrencyService","consts","CurrencyConverterComponent_Template","ɵɵlistener","CurrencyConverterComponent_Template_input_ngModelChange_4_listener","$event","CurrencyConverterComponent_Template_input_input_4_listener","CurrencyConverterComponent_Template_select_ngModelChange_5_listener","CurrencyConverterComponent_Template_select_change_5_listener","ɵɵtemplate","CurrencyConverterComponent_option_6_Template","CurrencyConverterComponent_Template_input_ngModelChange_10_listener","CurrencyConverterComponent_Template_input_input_10_listener","CurrencyConverterComponent_Template_select_ngModelChange_11_listener","CurrencyConverterComponent_Template_select_change_11_listener","CurrencyConverterComponent_option_12_Template","tap","http","apiUrl","get","pipe","console","log","ɵɵinject","HttpClient","factory","ɵfac","providedIn","ɵɵtextInterpolate","rate_r1","txt","ɵɵpipeBind2","ExRatesTabComponent_Template","ExRatesTabComponent_tr_10_Template","map","ɵɵtextInterpolate2","currency_r1","currentDate","currentTime","filteredCurrencies$","filteredCurrencies","filter","currency","updateDateTime","setInterval","now","Date","toLocaleDateString","toLocaleTimeString","HeaderComponent_Template","HeaderComponent_div_4_Template","ɵɵpipeBind1","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}